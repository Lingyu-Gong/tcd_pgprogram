// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write,
        p_kernel_val_0_V_1_read,
        p_kernel_val_0_V_2_read,
        p_kernel_val_1_V_0_read,
        p_kernel_val_1_V_2_read,
        p_kernel_val_2_V_0_read,
        p_kernel_val_2_V_1_read
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state9 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [15:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;
input  [1:0] p_kernel_val_0_V_1_read;
input  [1:0] p_kernel_val_0_V_2_read;
input  [2:0] p_kernel_val_1_V_0_read;
input  [3:0] p_kernel_val_1_V_2_read;
input  [1:0] p_kernel_val_2_V_0_read;
input  [2:0] p_kernel_val_2_V_1_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln444_reg_1419;
reg   [0:0] and_ln118_reg_1428;
reg   [0:0] icmp_ln899_reg_1384;
reg   [0:0] icmp_ln887_reg_1375;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] and_ln512_reg_1449;
reg   [0:0] and_ln512_reg_1449_pp0_iter4_reg;
reg   [10:0] t_V_2_reg_329;
wire  signed [9:0] sext_ln1118_fu_340_p1;
reg  signed [9:0] sext_ln1118_reg_1336;
wire  signed [9:0] sext_ln1118_1_fu_344_p1;
reg  signed [9:0] sext_ln1118_1_reg_1341;
wire  signed [10:0] sext_ln1118_2_fu_348_p1;
reg  signed [10:0] sext_ln1118_2_reg_1346;
wire   [11:0] zext_ln1118_4_fu_352_p1;
reg   [11:0] zext_ln1118_4_reg_1351;
wire  signed [9:0] sext_ln1118_3_fu_356_p1;
reg  signed [9:0] sext_ln1118_3_reg_1356;
wire   [10:0] zext_ln1118_5_fu_360_p1;
reg   [10:0] zext_ln1118_5_reg_1361;
wire   [0:0] icmp_ln443_fu_368_p2;
wire    ap_CS_fsm_state2;
wire   [9:0] i_V_fu_374_p2;
reg   [9:0] i_V_reg_1370;
wire   [0:0] icmp_ln887_fu_380_p2;
wire   [0:0] xor_ln457_fu_386_p2;
reg   [0:0] xor_ln457_reg_1379;
wire   [0:0] icmp_ln899_fu_402_p2;
wire   [0:0] icmp_ln879_fu_408_p2;
reg   [0:0] icmp_ln879_reg_1389;
wire   [0:0] icmp_ln879_1_fu_414_p2;
reg   [0:0] icmp_ln879_1_reg_1393;
wire   [0:0] icmp_ln899_1_fu_420_p2;
reg   [0:0] icmp_ln899_1_reg_1397;
wire   [1:0] xor_ln493_1_fu_574_p2;
reg   [1:0] xor_ln493_1_reg_1404;
wire   [1:0] xor_ln493_2_fu_612_p2;
reg   [1:0] xor_ln493_2_reg_1409;
wire   [1:0] xor_ln493_3_fu_650_p2;
reg   [1:0] xor_ln493_3_reg_1414;
wire   [0:0] icmp_ln444_fu_660_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op141_read_state4;
reg    ap_predicate_op148_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
reg    ap_block_state8_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln444_reg_1419_pp0_iter1_reg;
reg   [0:0] icmp_ln444_reg_1419_pp0_iter2_reg;
wire   [10:0] j_V_fu_666_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] and_ln118_fu_714_p2;
reg   [0:0] and_ln118_reg_1428_pp0_iter1_reg;
wire  signed [12:0] x_fu_788_p3;
reg  signed [12:0] x_reg_1432;
wire   [1:0] trunc_ln458_fu_796_p1;
reg   [1:0] trunc_ln458_reg_1437;
wire   [0:0] or_ln457_fu_800_p2;
reg   [0:0] or_ln457_reg_1442;
reg   [0:0] or_ln457_reg_1442_pp0_iter1_reg;
wire   [0:0] and_ln512_fu_805_p2;
reg   [0:0] and_ln512_reg_1449_pp0_iter1_reg;
reg   [0:0] and_ln512_reg_1449_pp0_iter2_reg;
reg   [0:0] and_ln512_reg_1449_pp0_iter3_reg;
reg   [7:0] right_border_buf_0_19_reg_1453;
wire   [1:0] xor_ln493_fu_823_p2;
reg   [1:0] xor_ln493_reg_1464;
reg   [10:0] k_buf_0_val_4_addr_reg_1471;
reg   [10:0] k_buf_0_val_5_addr_reg_1477;
wire   [7:0] src_kernel_win_0_va_23_fu_942_p3;
reg   [7:0] src_kernel_win_0_va_23_reg_1483;
reg   [7:0] src_kernel_win_0_va_23_reg_1483_pp0_iter3_reg;
wire   [7:0] src_kernel_win_0_va_24_fu_960_p3;
reg   [7:0] src_kernel_win_0_va_24_reg_1490;
reg   [7:0] src_kernel_win_0_va_24_reg_1490_pp0_iter3_reg;
wire   [7:0] src_kernel_win_0_va_25_fu_978_p3;
reg   [7:0] src_kernel_win_0_va_25_reg_1496;
wire  signed [10:0] grp_fu_1231_p3;
reg  signed [10:0] add_ln703_reg_1502;
reg    ap_enable_reg_pp0_iter2;
wire  signed [11:0] grp_fu_1245_p3;
reg  signed [11:0] add_ln703_2_reg_1507;
reg    ap_enable_reg_pp0_iter3;
wire  signed [9:0] mul_ln1118_4_fu_1032_p2;
reg  signed [9:0] mul_ln1118_4_reg_1512;
wire   [10:0] mul_ln1118_5_fu_1041_p2;
reg   [10:0] mul_ln1118_5_reg_1518;
reg   [0:0] p_Result_s_reg_1524;
wire  signed [11:0] p_Val2_5_fu_1139_p2;
reg  signed [11:0] p_Val2_5_reg_1530;
reg   [0:0] p_Result_1_reg_1535;
reg   [0:0] tmp_41_reg_1541;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter1_state4;
reg    ap_enable_reg_pp0_iter4;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
reg    k_buf_0_val_3_we0;
wire   [7:0] k_buf_0_val_3_q0;
wire   [10:0] k_buf_0_val_3_address1;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
reg    k_buf_0_val_4_we0;
wire   [7:0] k_buf_0_val_4_q0;
wire   [10:0] k_buf_0_val_4_address1;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
reg    k_buf_0_val_5_we0;
wire   [7:0] k_buf_0_val_5_q0;
wire   [10:0] k_buf_0_val_5_address1;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [9:0] t_V_reg_318;
wire    ap_CS_fsm_state9;
wire   [63:0] zext_ln835_fu_816_p1;
reg   [7:0] src_kernel_win_0_va_fu_154;
reg   [7:0] src_kernel_win_0_va_18_fu_158;
reg   [7:0] src_kernel_win_0_va_19_fu_162;
reg   [7:0] src_kernel_win_0_va_20_fu_166;
reg   [7:0] src_kernel_win_0_va_21_fu_170;
reg   [7:0] ap_sig_allocacmp_src_kernel_win_0_va_29;
reg   [7:0] src_kernel_win_0_va_22_fu_174;
reg   [7:0] ap_sig_allocacmp_src_kernel_win_0_va_30;
reg   [7:0] right_border_buf_0_s_fu_178;
wire   [7:0] col_buf_0_val_0_0_fu_854_p3;
reg   [7:0] right_border_buf_0_14_fu_182;
reg   [7:0] right_border_buf_0_15_fu_186;
reg   [7:0] right_border_buf_0_16_fu_190;
wire   [7:0] col_buf_0_val_1_0_fu_872_p3;
reg   [7:0] right_border_buf_0_17_fu_194;
reg   [7:0] right_border_buf_0_18_fu_198;
wire   [7:0] col_buf_0_val_2_0_fu_889_p3;
reg   [7:0] ap_sig_allocacmp_right_border_buf_0_19;
reg    ap_block_pp0_stage0_01001;
wire   [8:0] tmp_fu_392_p4;
wire   [10:0] zext_ln443_fu_364_p1;
wire   [1:0] trunc_ln506_fu_426_p1;
wire   [10:0] add_ln506_fu_430_p2;
wire   [0:0] tmp_28_fu_442_p3;
wire   [0:0] icmp_ln118_fu_456_p2;
wire   [0:0] xor_ln118_6_fu_450_p2;
wire   [0:0] tmp_29_fu_468_p3;
wire   [10:0] sub_ln142_fu_476_p2;
wire   [10:0] select_ln139_1_fu_482_p3;
wire   [1:0] trunc_ln507_fu_490_p1;
wire   [10:0] add_ln506_1_fu_506_p2;
wire   [10:0] add_ln506_2_fu_532_p2;
wire   [0:0] icmp_ln144_1_fu_494_p2;
wire   [1:0] sub_ln507_fu_500_p2;
wire   [0:0] and_ln118_1_fu_462_p2;
wire   [1:0] add_ln507_fu_436_p2;
wire   [1:0] select_ln507_fu_558_p3;
wire   [1:0] select_ln507_1_fu_566_p3;
wire   [1:0] trunc_ln142_fu_528_p1;
wire   [0:0] tmp_31_fu_520_p3;
wire   [1:0] sub_ln118_fu_586_p2;
wire   [1:0] trunc_ln118_fu_592_p1;
wire   [0:0] tmp_30_fu_512_p3;
wire   [1:0] select_ln139_4_fu_596_p3;
wire   [1:0] xor_ln118_1_fu_580_p2;
wire   [1:0] select_ln118_fu_604_p3;
wire   [1:0] trunc_ln142_2_fu_554_p1;
wire   [0:0] tmp_33_fu_546_p3;
wire   [1:0] xor_ln118_7_fu_624_p2;
wire   [1:0] trunc_ln118_2_fu_630_p1;
wire   [0:0] tmp_32_fu_538_p3;
wire   [1:0] select_ln139_5_fu_634_p3;
wire   [1:0] add_ln118_fu_618_p2;
wire   [1:0] select_ln118_1_fu_642_p3;
wire   [9:0] tmp_34_fu_672_p4;
wire   [11:0] zext_ln444_fu_656_p1;
wire   [11:0] ImagLoc_x_fu_688_p2;
wire   [0:0] tmp_35_fu_694_p3;
wire   [0:0] icmp_ln118_1_fu_708_p2;
wire   [0:0] xor_ln118_8_fu_702_p2;
wire   [0:0] tmp_36_fu_720_p3;
wire   [11:0] sub_ln142_2_fu_728_p2;
wire  signed [11:0] select_ln139_fu_734_p3;
wire   [11:0] sub_ln147_fu_752_p2;
wire   [11:0] select_ln118_3_fu_758_p3;
wire   [0:0] xor_ln118_9_fu_770_p2;
wire   [0:0] icmp_ln144_fu_746_p2;
wire   [0:0] or_ln118_fu_776_p2;
wire   [0:0] and_ln144_fu_782_p2;
wire  signed [12:0] sext_ln139_fu_742_p1;
wire   [12:0] zext_ln118_fu_766_p1;
wire   [0:0] icmp_ln891_fu_682_p2;
wire  signed [31:0] sext_ln144_fu_813_p1;
wire   [7:0] tmp_4_fu_843_p5;
wire   [7:0] tmp_5_fu_861_p5;
wire   [7:0] tmp_6_fu_879_p5;
wire   [7:0] tmp_7_fu_931_p5;
wire   [7:0] tmp_8_fu_949_p5;
wire   [7:0] tmp_9_fu_967_p5;
wire   [8:0] zext_ln1118_fu_991_p1;
wire  signed [8:0] sub_ln1118_fu_995_p2;
wire  signed [10:0] grp_fu_1238_p3;
wire   [7:0] mul_ln1118_4_fu_1032_p0;
wire  signed [1:0] mul_ln1118_4_fu_1032_p1;
wire   [7:0] mul_ln1118_5_fu_1041_p0;
wire   [2:0] mul_ln1118_5_fu_1041_p1;
wire  signed [10:0] sext_ln703_3_fu_1085_p1;
wire   [10:0] add_ln703_5_fu_1091_p2;
wire  signed [11:0] sext_ln703_4_fu_1096_p1;
wire  signed [11:0] grp_fu_1252_p3;
(* use_dsp48 = "no" *) wire   [11:0] add_ln703_6_fu_1100_p2;
wire   [11:0] zext_ln703_2_fu_1108_p1;
wire   [11:0] p_Val2_s_fu_1111_p2;
wire   [11:0] zext_ln703_fu_1088_p1;
wire   [9:0] zext_ln703_1_fu_1105_p1;
wire   [9:0] add_ln703_9_fu_1130_p2;
wire  signed [11:0] sext_ln703_5_fu_1135_p1;
(* use_dsp48 = "no" *) wire   [11:0] add_ln703_8_fu_1125_p2;
wire   [0:0] or_ln785_fu_1164_p2;
wire   [0:0] xor_ln785_fu_1168_p2;
wire   [0:0] and_ln786_fu_1179_p2;
wire   [0:0] xor_ln786_fu_1183_p2;
wire   [0:0] underflow_fu_1189_p2;
wire   [0:0] overflow_fu_1173_p2;
wire   [0:0] or_ln340_fu_1194_p2;
wire  signed [15:0] sext_ln703_6_fu_1161_p1;
wire   [0:0] or_ln340_1_fu_1200_p2;
wire   [15:0] select_ln340_fu_1206_p3;
wire   [15:0] select_ln388_fu_1214_p3;
wire   [7:0] grp_fu_1231_p0;
wire  signed [1:0] grp_fu_1231_p1;
wire   [7:0] grp_fu_1238_p0;
wire  signed [1:0] grp_fu_1238_p1;
wire   [7:0] grp_fu_1245_p0;
wire  signed [2:0] grp_fu_1245_p1;
wire   [7:0] grp_fu_1252_p0;
wire   [3:0] grp_fu_1252_p1;
reg   [3:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op142_store_state4;
reg    ap_enable_operation_142;
reg    ap_enable_state4_pp0_iter1_stage0;
reg    ap_predicate_op140_load_state4;
reg    ap_enable_operation_140;
reg    ap_enable_operation_165;
reg    ap_enable_state5_pp0_iter2_stage0;
reg    ap_predicate_op170_store_state5;
reg    ap_enable_operation_170;
reg    ap_predicate_op144_store_state4;
reg    ap_enable_operation_144;
reg    ap_enable_operation_138;
wire    ap_enable_operation_162;
reg    ap_predicate_op171_store_state5;
reg    ap_enable_operation_171;
reg    ap_predicate_op146_store_state4;
reg    ap_enable_operation_146;
reg    ap_enable_operation_135;
wire    ap_enable_operation_159;
reg    ap_predicate_op149_store_state4;
reg    ap_enable_operation_149;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_1231_p00;
wire   [9:0] grp_fu_1238_p00;
wire   [10:0] grp_fu_1245_p00;
wire   [11:0] grp_fu_1252_p00;
wire   [9:0] mul_ln1118_4_fu_1032_p00;
wire   [10:0] mul_ln1118_5_fu_1041_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .we0(k_buf_0_val_3_we0),
    .d0(p_src_data_stream_V_dout),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_address1),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .we0(k_buf_0_val_4_we0),
    .d0(p_src_data_stream_V_dout),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_address1),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_3_q0)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .we0(k_buf_0_val_5_we0),
    .d0(p_src_data_stream_V_dout),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_address1),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_4_q0)
);

sobel_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_3hbi_U55(
    .din0(right_border_buf_0_s_fu_178),
    .din1(right_border_buf_0_14_fu_182),
    .din2(8'd0),
    .din3(xor_ln493_reg_1464),
    .dout(tmp_4_fu_843_p5)
);

sobel_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_3hbi_U56(
    .din0(right_border_buf_0_16_fu_190),
    .din1(right_border_buf_0_17_fu_194),
    .din2(8'd0),
    .din3(xor_ln493_reg_1464),
    .dout(tmp_5_fu_861_p5)
);

sobel_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_3hbi_U57(
    .din0(right_border_buf_0_19_reg_1453),
    .din1(right_border_buf_0_15_fu_186),
    .din2(8'd0),
    .din3(xor_ln493_reg_1464),
    .dout(tmp_6_fu_879_p5)
);

sobel_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_3hbi_U58(
    .din0(col_buf_0_val_0_0_fu_854_p3),
    .din1(col_buf_0_val_1_0_fu_872_p3),
    .din2(col_buf_0_val_2_0_fu_889_p3),
    .din3(xor_ln493_1_reg_1404),
    .dout(tmp_7_fu_931_p5)
);

sobel_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_3hbi_U59(
    .din0(col_buf_0_val_0_0_fu_854_p3),
    .din1(col_buf_0_val_1_0_fu_872_p3),
    .din2(col_buf_0_val_2_0_fu_889_p3),
    .din3(xor_ln493_2_reg_1409),
    .dout(tmp_8_fu_949_p5)
);

sobel_accel_mux_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sobel_accel_mux_3hbi_U60(
    .din0(col_buf_0_val_0_0_fu_854_p3),
    .din1(col_buf_0_val_1_0_fu_872_p3),
    .din2(col_buf_0_val_2_0_fu_889_p3),
    .din3(xor_ln493_3_reg_1414),
    .dout(tmp_9_fu_967_p5)
);

sobel_accel_mac_mpcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
sobel_accel_mac_mpcA_U61(
    .din0(grp_fu_1231_p0),
    .din1(grp_fu_1231_p1),
    .din2(sub_ln1118_fu_995_p2),
    .dout(grp_fu_1231_p3)
);

sobel_accel_mac_mqcK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
sobel_accel_mac_mqcK_U62(
    .din0(grp_fu_1238_p0),
    .din1(grp_fu_1238_p1),
    .din2(add_ln703_reg_1502),
    .dout(grp_fu_1238_p3)
);

sobel_accel_mac_mrcU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 12 ))
sobel_accel_mac_mrcU_U63(
    .din0(grp_fu_1245_p0),
    .din1(grp_fu_1245_p1),
    .din2(grp_fu_1238_p3),
    .dout(grp_fu_1245_p3)
);

sobel_accel_mac_msc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
sobel_accel_mac_msc4_U64(
    .din0(grp_fu_1252_p0),
    .din1(grp_fu_1252_p1),
    .din2(add_ln703_2_reg_1507),
    .dout(grp_fu_1252_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((icmp_ln444_fu_660_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln443_fu_368_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter1_state4)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((icmp_ln443_fu_368_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_fu_660_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_329 <= j_V_fu_666_p2;
    end else if (((icmp_ln443_fu_368_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_2_reg_329 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        t_V_reg_318 <= i_V_reg_1370;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_318 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln512_reg_1449_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln703_2_reg_1507 <= grp_fu_1245_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln512_reg_1449_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln703_reg_1502 <= grp_fu_1231_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_fu_660_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln118_reg_1428 <= and_ln118_fu_714_p2;
        and_ln512_reg_1449 <= and_ln512_fu_805_p2;
        or_ln457_reg_1442 <= or_ln457_fu_800_p2;
        trunc_ln458_reg_1437 <= trunc_ln458_fu_796_p1;
        x_reg_1432 <= x_fu_788_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln118_reg_1428_pp0_iter1_reg <= and_ln118_reg_1428;
        and_ln512_reg_1449_pp0_iter1_reg <= and_ln512_reg_1449;
        icmp_ln444_reg_1419 <= icmp_ln444_fu_660_p2;
        icmp_ln444_reg_1419_pp0_iter1_reg <= icmp_ln444_reg_1419;
        or_ln457_reg_1442_pp0_iter1_reg <= or_ln457_reg_1442;
        right_border_buf_0_19_reg_1453 <= ap_sig_allocacmp_right_border_buf_0_19;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln512_reg_1449_pp0_iter2_reg <= and_ln512_reg_1449_pp0_iter1_reg;
        and_ln512_reg_1449_pp0_iter3_reg <= and_ln512_reg_1449_pp0_iter2_reg;
        and_ln512_reg_1449_pp0_iter4_reg <= and_ln512_reg_1449_pp0_iter3_reg;
        icmp_ln444_reg_1419_pp0_iter2_reg <= icmp_ln444_reg_1419_pp0_iter1_reg;
        src_kernel_win_0_va_23_reg_1483 <= src_kernel_win_0_va_23_fu_942_p3;
        src_kernel_win_0_va_23_reg_1483_pp0_iter3_reg <= src_kernel_win_0_va_23_reg_1483;
        src_kernel_win_0_va_24_reg_1490 <= src_kernel_win_0_va_24_fu_960_p3;
        src_kernel_win_0_va_24_reg_1490_pp0_iter3_reg <= src_kernel_win_0_va_24_reg_1490;
        src_kernel_win_0_va_25_reg_1496 <= src_kernel_win_0_va_25_fu_978_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1370 <= i_V_fu_374_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln443_fu_368_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln879_1_reg_1393 <= icmp_ln879_1_fu_414_p2;
        icmp_ln879_reg_1389 <= icmp_ln879_fu_408_p2;
        icmp_ln887_reg_1375 <= icmp_ln887_fu_380_p2;
        icmp_ln899_1_reg_1397 <= icmp_ln899_1_fu_420_p2;
        icmp_ln899_reg_1384 <= icmp_ln899_fu_402_p2;
        xor_ln457_reg_1379 <= xor_ln457_fu_386_p2;
        xor_ln493_1_reg_1404 <= xor_ln493_1_fu_574_p2;
        xor_ln493_2_reg_1409 <= xor_ln493_2_fu_612_p2;
        xor_ln493_3_reg_1414 <= xor_ln493_3_fu_650_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_reg_1419 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_addr_reg_1471 <= zext_ln835_fu_816_p1;
        k_buf_0_val_5_addr_reg_1477 <= zext_ln835_fu_816_p1;
        xor_ln493_reg_1464 <= xor_ln493_fu_823_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln512_reg_1449_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_ln1118_4_reg_1512 <= mul_ln1118_4_fu_1032_p2;
        mul_ln1118_5_reg_1518 <= mul_ln1118_5_fu_1041_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln512_reg_1449_pp0_iter3_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_1_reg_1535 <= p_Val2_5_fu_1139_p2[32'd11];
        p_Result_s_reg_1524 <= p_Val2_s_fu_1111_p2[32'd11];
        p_Val2_5_reg_1530 <= p_Val2_5_fu_1139_p2;
        tmp_41_reg_1541 <= p_Val2_s_fu_1111_p2[32'd11];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1375 == 1'd1) & (icmp_ln899_reg_1384 == 1'd1) & (1'd1 == and_ln118_reg_1428_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_14_fu_182 <= right_border_buf_0_s_fu_178;
        right_border_buf_0_15_fu_186 <= right_border_buf_0_19_reg_1453;
        right_border_buf_0_16_fu_190 <= col_buf_0_val_1_0_fu_872_p3;
        right_border_buf_0_17_fu_194 <= right_border_buf_0_16_fu_190;
        right_border_buf_0_18_fu_198 <= col_buf_0_val_2_0_fu_889_p3;
        right_border_buf_0_s_fu_178 <= col_buf_0_val_0_0_fu_854_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sext_ln1118_1_reg_1341 <= sext_ln1118_1_fu_344_p1;
        sext_ln1118_2_reg_1346 <= sext_ln1118_2_fu_348_p1;
        sext_ln1118_3_reg_1356 <= sext_ln1118_3_fu_356_p1;
        sext_ln1118_reg_1336 <= sext_ln1118_fu_340_p1;
        zext_ln1118_4_reg_1351[3 : 0] <= zext_ln1118_4_fu_352_p1[3 : 0];
        zext_ln1118_5_reg_1361[2 : 0] <= zext_ln1118_5_fu_360_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln444_reg_1419_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_18_fu_158 <= src_kernel_win_0_va_fu_154;
        src_kernel_win_0_va_19_fu_162 <= src_kernel_win_0_va_24_reg_1490;
        src_kernel_win_0_va_20_fu_166 <= src_kernel_win_0_va_19_fu_162;
        src_kernel_win_0_va_21_fu_170 <= src_kernel_win_0_va_25_reg_1496;
        src_kernel_win_0_va_22_fu_174 <= src_kernel_win_0_va_21_fu_170;
        src_kernel_win_0_va_fu_154 <= src_kernel_win_0_va_23_reg_1483;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_condition_pp0_exit_iter1_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter1_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln443_fu_368_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln443_fu_368_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_1375 == 1'd1) & (icmp_ln899_reg_1384 == 1'd1) & (1'd1 == and_ln118_reg_1428_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_right_border_buf_0_19 = col_buf_0_val_2_0_fu_889_p3;
    end else begin
        ap_sig_allocacmp_right_border_buf_0_19 = right_border_buf_0_18_fu_198;
    end
end

always @ (*) begin
    if (((icmp_ln444_reg_1419_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_src_kernel_win_0_va_29 = src_kernel_win_0_va_25_reg_1496;
    end else begin
        ap_sig_allocacmp_src_kernel_win_0_va_29 = src_kernel_win_0_va_21_fu_170;
    end
end

always @ (*) begin
    if (((icmp_ln444_reg_1419_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_src_kernel_win_0_va_30 = src_kernel_win_0_va_21_fu_170;
    end else begin
        ap_sig_allocacmp_src_kernel_win_0_va_30 = src_kernel_win_0_va_22_fu_174;
    end
end

always @ (*) begin
    if (((icmp_ln444_reg_1419 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln879_reg_1389 == 1'd1) & (1'd1 == and_ln118_reg_1428) & (icmp_ln899_reg_1384 == 1'd0) & (icmp_ln444_reg_1419 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_we0 = 1'b1;
    end else begin
        k_buf_0_val_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_1375 == 1'd1) & (icmp_ln899_reg_1384 == 1'd1) & (1'd1 == and_ln118_reg_1428) & (icmp_ln444_reg_1419 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln444_reg_1419 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln879_1_reg_1393 == 1'd1) & (1'd1 == and_ln118_reg_1428) & (icmp_ln899_reg_1384 == 1'd0) & (icmp_ln444_reg_1419 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_we0 = 1'b1;
    end else begin
        k_buf_0_val_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_1375 == 1'd1) & (icmp_ln899_reg_1384 == 1'd1) & (1'd1 == and_ln118_reg_1428_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln879_reg_1389 == 1'd1) & (1'd1 == and_ln118_reg_1428) & (icmp_ln899_reg_1384 == 1'd0) & (icmp_ln444_reg_1419 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((or_ln457_reg_1442 == 1'd1) & (icmp_ln444_reg_1419 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln879_reg_1389 == 1'd1) & (1'd1 == and_ln118_reg_1428) & (icmp_ln899_reg_1384 == 1'd0) & (icmp_ln444_reg_1419 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_we0 = 1'b1;
    end else begin
        k_buf_0_val_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_1375 == 1'd1) & (icmp_ln899_reg_1384 == 1'd1) & (1'd1 == and_ln118_reg_1428_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln512_reg_1449_pp0_iter4_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln512_reg_1449_pp0_iter4_reg) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_1375 == 1'd1) & (icmp_ln899_reg_1384 == 1'd1) & (1'd1 == and_ln118_reg_1428) & (icmp_ln444_reg_1419 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd1 == and_ln118_reg_1428) & (icmp_ln899_reg_1384 == 1'd0) & (icmp_ln444_reg_1419 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op148_read_state4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op141_read_state4 == 1'b1)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln443_fu_368_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0)) & ~((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_fu_688_p2 = ($signed(12'd4095) + $signed(zext_ln444_fu_656_p1));

assign add_ln118_fu_618_p2 = (2'd1 + trunc_ln506_fu_426_p1);

assign add_ln506_1_fu_506_p2 = ($signed(11'd2046) + $signed(zext_ln443_fu_364_p1));

assign add_ln506_2_fu_532_p2 = ($signed(11'd2045) + $signed(zext_ln443_fu_364_p1));

assign add_ln506_fu_430_p2 = ($signed(11'd2047) + $signed(zext_ln443_fu_364_p1));

assign add_ln507_fu_436_p2 = ($signed(2'd3) + $signed(trunc_ln506_fu_426_p1));

assign add_ln703_5_fu_1091_p2 = ($signed(mul_ln1118_5_reg_1518) + $signed(sext_ln703_3_fu_1085_p1));

assign add_ln703_6_fu_1100_p2 = ($signed(sext_ln703_4_fu_1096_p1) + $signed(grp_fu_1252_p3));

assign add_ln703_8_fu_1125_p2 = ($signed(grp_fu_1252_p3) + $signed(zext_ln703_fu_1088_p1));

assign add_ln703_9_fu_1130_p2 = ($signed(mul_ln1118_4_reg_1512) + $signed(zext_ln703_1_fu_1105_p1));

assign and_ln118_1_fu_462_p2 = (xor_ln118_6_fu_450_p2 & icmp_ln118_fu_456_p2);

assign and_ln118_fu_714_p2 = (xor_ln118_8_fu_702_p2 & icmp_ln118_1_fu_708_p2);

assign and_ln144_fu_782_p2 = (or_ln118_fu_776_p2 & icmp_ln144_fu_746_p2);

assign and_ln512_fu_805_p2 = (icmp_ln899_reg_1384 & icmp_ln891_fu_682_p2);

assign and_ln786_fu_1179_p2 = (tmp_41_reg_1541 & p_Result_1_reg_1535);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'd1 == and_ln512_reg_1449_pp0_iter4_reg) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op148_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op141_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'd1 == and_ln512_reg_1449_pp0_iter4_reg) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op148_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op141_read_state4 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'd1 == and_ln512_reg_1449_pp0_iter4_reg) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op148_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op141_read_state4 == 1'b1)))));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op148_read_state4 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op141_read_state4 == 1'b1)));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter5 = ((1'd1 == and_ln512_reg_1449_pp0_iter4_reg) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_enable_operation_135 = (icmp_ln444_reg_1419 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_138 = (icmp_ln444_reg_1419 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_140 = (ap_predicate_op140_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_142 = (ap_predicate_op142_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_144 = (ap_predicate_op144_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_146 = (ap_predicate_op146_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_149 = (ap_predicate_op149_store_state4 == 1'b1);
end

assign ap_enable_operation_159 = (1'b1 == 1'b1);

assign ap_enable_operation_162 = (1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_165 = (or_ln457_reg_1442_pp0_iter1_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_170 = (ap_predicate_op170_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_171 = (ap_predicate_op171_store_state5 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state4_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state5_pp0_iter2_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_predicate_op140_load_state4 = ((or_ln457_reg_1442 == 1'd1) & (icmp_ln444_reg_1419 == 1'd0));
end

always @ (*) begin
    ap_predicate_op141_read_state4 = ((1'd1 == and_ln118_reg_1428) & (icmp_ln899_reg_1384 == 1'd0) & (icmp_ln444_reg_1419 == 1'd0));
end

always @ (*) begin
    ap_predicate_op142_store_state4 = ((icmp_ln879_reg_1389 == 1'd1) & (1'd1 == and_ln118_reg_1428) & (icmp_ln899_reg_1384 == 1'd0) & (icmp_ln444_reg_1419 == 1'd0));
end

always @ (*) begin
    ap_predicate_op144_store_state4 = ((icmp_ln879_1_reg_1393 == 1'd1) & (1'd1 == and_ln118_reg_1428) & (icmp_ln899_reg_1384 == 1'd0) & (icmp_ln444_reg_1419 == 1'd0));
end

always @ (*) begin
    ap_predicate_op146_store_state4 = ((icmp_ln879_reg_1389 == 1'd1) & (1'd1 == and_ln118_reg_1428) & (icmp_ln899_reg_1384 == 1'd0) & (icmp_ln444_reg_1419 == 1'd0));
end

always @ (*) begin
    ap_predicate_op148_read_state4 = ((icmp_ln887_reg_1375 == 1'd1) & (icmp_ln899_reg_1384 == 1'd1) & (1'd1 == and_ln118_reg_1428) & (icmp_ln444_reg_1419 == 1'd0));
end

always @ (*) begin
    ap_predicate_op149_store_state4 = ((icmp_ln887_reg_1375 == 1'd1) & (icmp_ln899_reg_1384 == 1'd1) & (1'd1 == and_ln118_reg_1428) & (icmp_ln444_reg_1419 == 1'd0));
end

always @ (*) begin
    ap_predicate_op170_store_state5 = ((icmp_ln887_reg_1375 == 1'd1) & (icmp_ln899_reg_1384 == 1'd1) & (1'd1 == and_ln118_reg_1428_pp0_iter1_reg));
end

always @ (*) begin
    ap_predicate_op171_store_state5 = ((icmp_ln887_reg_1375 == 1'd1) & (icmp_ln899_reg_1384 == 1'd1) & (1'd1 == and_ln118_reg_1428_pp0_iter1_reg));
end

assign col_buf_0_val_0_0_fu_854_p3 = ((or_ln457_reg_1442_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_4_fu_843_p5);

assign col_buf_0_val_1_0_fu_872_p3 = ((or_ln457_reg_1442_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_5_fu_861_p5);

assign col_buf_0_val_2_0_fu_889_p3 = ((or_ln457_reg_1442_pp0_iter1_reg[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_6_fu_879_p5);

assign grp_fu_1231_p0 = grp_fu_1231_p00;

assign grp_fu_1231_p00 = ap_sig_allocacmp_src_kernel_win_0_va_29;

assign grp_fu_1231_p1 = sext_ln1118_reg_1336;

assign grp_fu_1238_p0 = grp_fu_1238_p00;

assign grp_fu_1238_p00 = src_kernel_win_0_va_25_reg_1496;

assign grp_fu_1238_p1 = sext_ln1118_1_reg_1341;

assign grp_fu_1245_p0 = grp_fu_1245_p00;

assign grp_fu_1245_p00 = src_kernel_win_0_va_20_fu_166;

assign grp_fu_1245_p1 = sext_ln1118_2_reg_1346;

assign grp_fu_1252_p0 = grp_fu_1252_p00;

assign grp_fu_1252_p00 = src_kernel_win_0_va_24_reg_1490_pp0_iter3_reg;

assign grp_fu_1252_p1 = zext_ln1118_4_reg_1351;

assign i_V_fu_374_p2 = (t_V_reg_318 + 10'd1);

assign icmp_ln118_1_fu_708_p2 = (($signed(ImagLoc_x_fu_688_p2) < $signed(12'd1280)) ? 1'b1 : 1'b0);

assign icmp_ln118_fu_456_p2 = (($signed(add_ln506_fu_430_p2) < $signed(11'd720)) ? 1'b1 : 1'b0);

assign icmp_ln144_1_fu_494_p2 = (($signed(select_ln139_1_fu_482_p3) < $signed(11'd720)) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_746_p2 = (($signed(select_ln139_fu_734_p3) < $signed(12'd1280)) ? 1'b1 : 1'b0);

assign icmp_ln443_fu_368_p2 = ((t_V_reg_318 == 10'd722) ? 1'b1 : 1'b0);

assign icmp_ln444_fu_660_p2 = ((t_V_2_reg_329 == 11'd1282) ? 1'b1 : 1'b0);

assign icmp_ln879_1_fu_414_p2 = ((t_V_reg_318 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_408_p2 = ((t_V_reg_318 == 10'd1) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_380_p2 = ((t_V_reg_318 < 10'd720) ? 1'b1 : 1'b0);

assign icmp_ln891_fu_682_p2 = ((tmp_34_fu_672_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln899_1_fu_420_p2 = ((t_V_reg_318 > 10'd720) ? 1'b1 : 1'b0);

assign icmp_ln899_fu_402_p2 = ((tmp_fu_392_p4 != 9'd0) ? 1'b1 : 1'b0);

assign j_V_fu_666_p2 = (t_V_2_reg_329 + 11'd1);

assign k_buf_0_val_3_address0 = zext_ln835_fu_816_p1;

assign k_buf_0_val_3_address1 = zext_ln835_fu_816_p1;

assign k_buf_0_val_4_address0 = zext_ln835_fu_816_p1;

assign k_buf_0_val_4_address1 = k_buf_0_val_4_addr_reg_1471;

assign k_buf_0_val_5_address0 = zext_ln835_fu_816_p1;

assign k_buf_0_val_5_address1 = k_buf_0_val_5_addr_reg_1477;

assign mul_ln1118_4_fu_1032_p0 = mul_ln1118_4_fu_1032_p00;

assign mul_ln1118_4_fu_1032_p00 = src_kernel_win_0_va_18_fu_158;

assign mul_ln1118_4_fu_1032_p1 = sext_ln1118_3_reg_1356;

assign mul_ln1118_4_fu_1032_p2 = ($signed({{1'b0}, {mul_ln1118_4_fu_1032_p0}}) * $signed(mul_ln1118_4_fu_1032_p1));

assign mul_ln1118_5_fu_1041_p0 = mul_ln1118_5_fu_1041_p00;

assign mul_ln1118_5_fu_1041_p00 = src_kernel_win_0_va_fu_154;

assign mul_ln1118_5_fu_1041_p1 = zext_ln1118_5_reg_1361;

assign mul_ln1118_5_fu_1041_p2 = (mul_ln1118_5_fu_1041_p0 * mul_ln1118_5_fu_1041_p1);

assign or_ln118_fu_776_p2 = (xor_ln118_9_fu_770_p2 | tmp_35_fu_694_p3);

assign or_ln340_1_fu_1200_p2 = (xor_ln785_fu_1168_p2 | and_ln786_fu_1179_p2);

assign or_ln340_fu_1194_p2 = (underflow_fu_1189_p2 | overflow_fu_1173_p2);

assign or_ln457_fu_800_p2 = (xor_ln457_reg_1379 | icmp_ln118_1_fu_708_p2);

assign or_ln785_fu_1164_p2 = (tmp_41_reg_1541 | p_Result_1_reg_1535);

assign overflow_fu_1173_p2 = (xor_ln785_fu_1168_p2 & or_ln785_fu_1164_p2);

assign p_Val2_5_fu_1139_p2 = ($signed(sext_ln703_5_fu_1135_p1) + $signed(add_ln703_8_fu_1125_p2));

assign p_Val2_s_fu_1111_p2 = (add_ln703_6_fu_1100_p2 + zext_ln703_2_fu_1108_p1);

assign p_dst_data_stream_V_din = ((or_ln340_1_fu_1200_p2[0:0] === 1'b1) ? select_ln340_fu_1206_p3 : select_ln388_fu_1214_p3);

assign select_ln118_1_fu_642_p3 = ((tmp_32_fu_538_p3[0:0] === 1'b1) ? select_ln139_5_fu_634_p3 : add_ln118_fu_618_p2);

assign select_ln118_3_fu_758_p3 = ((and_ln118_fu_714_p2[0:0] === 1'b1) ? ImagLoc_x_fu_688_p2 : sub_ln147_fu_752_p2);

assign select_ln118_fu_604_p3 = ((tmp_30_fu_512_p3[0:0] === 1'b1) ? select_ln139_4_fu_596_p3 : xor_ln118_1_fu_580_p2);

assign select_ln139_1_fu_482_p3 = ((tmp_29_fu_468_p3[0:0] === 1'b1) ? sub_ln142_fu_476_p2 : add_ln506_fu_430_p2);

assign select_ln139_4_fu_596_p3 = ((tmp_31_fu_520_p3[0:0] === 1'b1) ? sub_ln118_fu_586_p2 : trunc_ln118_fu_592_p1);

assign select_ln139_5_fu_634_p3 = ((tmp_33_fu_546_p3[0:0] === 1'b1) ? xor_ln118_7_fu_624_p2 : trunc_ln118_2_fu_630_p1);

assign select_ln139_fu_734_p3 = ((tmp_36_fu_720_p3[0:0] === 1'b1) ? sub_ln142_2_fu_728_p2 : ImagLoc_x_fu_688_p2);

assign select_ln340_fu_1206_p3 = ((or_ln340_fu_1194_p2[0:0] === 1'b1) ? 16'd32767 : sext_ln703_6_fu_1161_p1);

assign select_ln388_fu_1214_p3 = ((underflow_fu_1189_p2[0:0] === 1'b1) ? 16'd32768 : sext_ln703_6_fu_1161_p1);

assign select_ln507_1_fu_566_p3 = ((and_ln118_1_fu_462_p2[0:0] === 1'b1) ? add_ln507_fu_436_p2 : select_ln507_fu_558_p3);

assign select_ln507_fu_558_p3 = ((icmp_ln144_1_fu_494_p2[0:0] === 1'b1) ? trunc_ln507_fu_490_p1 : sub_ln507_fu_500_p2);

assign sext_ln1118_1_fu_344_p1 = $signed(p_kernel_val_0_V_2_read);

assign sext_ln1118_2_fu_348_p1 = $signed(p_kernel_val_1_V_0_read);

assign sext_ln1118_3_fu_356_p1 = $signed(p_kernel_val_2_V_0_read);

assign sext_ln1118_fu_340_p1 = $signed(p_kernel_val_0_V_1_read);

assign sext_ln139_fu_742_p1 = select_ln139_fu_734_p3;

assign sext_ln144_fu_813_p1 = x_reg_1432;

assign sext_ln703_3_fu_1085_p1 = mul_ln1118_4_reg_1512;

assign sext_ln703_4_fu_1096_p1 = $signed(add_ln703_5_fu_1091_p2);

assign sext_ln703_5_fu_1135_p1 = $signed(add_ln703_9_fu_1130_p2);

assign sext_ln703_6_fu_1161_p1 = p_Val2_5_reg_1530;

assign src_kernel_win_0_va_23_fu_942_p3 = ((icmp_ln899_1_reg_1397[0:0] === 1'b1) ? tmp_7_fu_931_p5 : col_buf_0_val_0_0_fu_854_p3);

assign src_kernel_win_0_va_24_fu_960_p3 = ((icmp_ln899_1_reg_1397[0:0] === 1'b1) ? tmp_8_fu_949_p5 : col_buf_0_val_1_0_fu_872_p3);

assign src_kernel_win_0_va_25_fu_978_p3 = ((icmp_ln899_1_reg_1397[0:0] === 1'b1) ? tmp_9_fu_967_p5 : col_buf_0_val_2_0_fu_889_p3);

assign sub_ln1118_fu_995_p2 = (9'd0 - zext_ln1118_fu_991_p1);

assign sub_ln118_fu_586_p2 = ($signed(2'd2) - $signed(trunc_ln142_fu_528_p1));

assign sub_ln142_2_fu_728_p2 = (12'd1 - zext_ln444_fu_656_p1);

assign sub_ln142_fu_476_p2 = (11'd1 - zext_ln443_fu_364_p1);

assign sub_ln147_fu_752_p2 = ($signed(12'd2558) - $signed(select_ln139_fu_734_p3));

assign sub_ln507_fu_500_p2 = ($signed(2'd2) - $signed(trunc_ln507_fu_490_p1));

assign tmp_28_fu_442_p3 = add_ln506_fu_430_p2[32'd10];

assign tmp_29_fu_468_p3 = add_ln506_fu_430_p2[32'd10];

assign tmp_30_fu_512_p3 = add_ln506_1_fu_506_p2[32'd10];

assign tmp_31_fu_520_p3 = add_ln506_1_fu_506_p2[32'd10];

assign tmp_32_fu_538_p3 = add_ln506_2_fu_532_p2[32'd10];

assign tmp_33_fu_546_p3 = add_ln506_2_fu_532_p2[32'd10];

assign tmp_34_fu_672_p4 = {{t_V_2_reg_329[10:1]}};

assign tmp_35_fu_694_p3 = ImagLoc_x_fu_688_p2[32'd11];

assign tmp_36_fu_720_p3 = ImagLoc_x_fu_688_p2[32'd11];

assign tmp_fu_392_p4 = {{t_V_reg_318[9:1]}};

assign trunc_ln118_2_fu_630_p1 = add_ln506_2_fu_532_p2[1:0];

assign trunc_ln118_fu_592_p1 = add_ln506_1_fu_506_p2[1:0];

assign trunc_ln142_2_fu_554_p1 = t_V_reg_318[1:0];

assign trunc_ln142_fu_528_p1 = t_V_reg_318[1:0];

assign trunc_ln458_fu_796_p1 = x_fu_788_p3[1:0];

assign trunc_ln506_fu_426_p1 = t_V_reg_318[1:0];

assign trunc_ln507_fu_490_p1 = select_ln139_1_fu_482_p3[1:0];

assign underflow_fu_1189_p2 = (xor_ln786_fu_1183_p2 & p_Result_s_reg_1524);

assign x_fu_788_p3 = ((and_ln144_fu_782_p2[0:0] === 1'b1) ? sext_ln139_fu_742_p1 : zext_ln118_fu_766_p1);

assign xor_ln118_1_fu_580_p2 = (trunc_ln506_fu_426_p1 ^ 2'd2);

assign xor_ln118_6_fu_450_p2 = (tmp_28_fu_442_p3 ^ 1'd1);

assign xor_ln118_7_fu_624_p2 = (trunc_ln142_2_fu_554_p1 ^ 2'd3);

assign xor_ln118_8_fu_702_p2 = (tmp_35_fu_694_p3 ^ 1'd1);

assign xor_ln118_9_fu_770_p2 = (icmp_ln118_1_fu_708_p2 ^ 1'd1);

assign xor_ln457_fu_386_p2 = (icmp_ln887_fu_380_p2 ^ 1'd1);

assign xor_ln493_1_fu_574_p2 = (select_ln507_1_fu_566_p3 ^ 2'd3);

assign xor_ln493_2_fu_612_p2 = (select_ln118_fu_604_p3 ^ 2'd3);

assign xor_ln493_3_fu_650_p2 = (select_ln118_1_fu_642_p3 ^ 2'd3);

assign xor_ln493_fu_823_p2 = (trunc_ln458_reg_1437 ^ 2'd3);

assign xor_ln785_fu_1168_p2 = (p_Result_s_reg_1524 ^ 1'd1);

assign xor_ln786_fu_1183_p2 = (1'd1 ^ and_ln786_fu_1179_p2);

assign zext_ln1118_4_fu_352_p1 = p_kernel_val_1_V_2_read;

assign zext_ln1118_5_fu_360_p1 = p_kernel_val_2_V_1_read;

assign zext_ln1118_fu_991_p1 = ap_sig_allocacmp_src_kernel_win_0_va_30;

assign zext_ln118_fu_766_p1 = select_ln118_3_fu_758_p3;

assign zext_ln443_fu_364_p1 = t_V_reg_318;

assign zext_ln444_fu_656_p1 = t_V_2_reg_329;

assign zext_ln703_1_fu_1105_p1 = src_kernel_win_0_va_23_reg_1483_pp0_iter3_reg;

assign zext_ln703_2_fu_1108_p1 = src_kernel_win_0_va_23_reg_1483_pp0_iter3_reg;

assign zext_ln703_fu_1088_p1 = mul_ln1118_5_reg_1518;

assign zext_ln835_fu_816_p1 = $unsigned(sext_ln144_fu_813_p1);

always @ (posedge ap_clk) begin
    zext_ln1118_4_reg_1351[11:4] <= 8'b00000000;
    zext_ln1118_5_reg_1361[10:3] <= 8'b00000000;
end

endmodule //Filter2D
